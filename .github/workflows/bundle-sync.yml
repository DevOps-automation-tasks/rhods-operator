# name: Sync Bundle from Operator Repo to RBC Repo

# on:
#   push:
#     branches:
#       - 'rhoai-*'  # Trigger the workflow on pushes to any rhoai-* branch
#     paths:
#       - 'bundle/**'  # Trigger the workflow for changes to any file in the bundle directory
#       - 'Dockerfiles/bundle.Dockerfile'  # Trigger the workflow for changes to the Dockerfile

# permissions:
#   contents: read
#   packages: write
#   id-token: write

# jobs:
#   sync:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout source repo
#         uses: actions/checkout@v3
#         with:
#           repository: DevOps-automation-tasks/rhods-operator.git
#           token: ${{ secrets.PAT_TOKEN }}
#           path: source_repo
#           ref: ${{ github.ref_name }}  # Use the same branch name as in the event

#       - name: Checkout target repo
#         uses: actions/checkout@v3
#         with:
#           repository: DevOps-automation-tasks/RHOAI-Build-Config.git
#           token: ${{ secrets.PAT_TOKEN }}
#           path: target_repo
#           ref: ${{ github.ref_name }}  # Use the same branch name as in the event

#       - name: Remove unnecessary fields from CSV
#         run: |
#           sed -i '/olm.skipRange/d' source_repo/bundle/manifests/*.clusterserviceversion.yaml
#           sed -i '/replaces/d' source_repo/bundle/manifests/*.clusterserviceversion.yaml

#       - name: Remove channels and defaultChannel from annotations.yaml
#         run: |
#           sed -i '/channels:/d' source_repo/bundle/metadata/annotations.yaml
#           sed -i '/defaultChannel:/d' source_repo/bundle/metadata/annotations.yaml

#       - name: Retain current image digests in the RBC repo
#         run: |
#           # Backup current image digests
#           cp target_repo/bundle/manifests/*.clusterserviceversion.yaml /tmp/rbc_csv.yaml
#           # Replace image digests in the source CSV with the ones from the target repo
#           for image in $(grep -oP 'image:\s*\K\S+' /tmp/rbc_csv.yaml); do
#             sed -i "s|image: .*|image: $image|g" source_repo/bundle/manifests/*.clusterserviceversion.yaml
#           done

#       - name: Compare and Sync Changes
#         run: |
#           # Function to compare and sync files
#           sync_files() {
#             local source_dir=$1
#             local target_dir=$2
#             for file in $(find $source_dir -type f); do
#               relative_path=$(realpath --relative-to="$source_dir" "$file")
#               target_file="$target_dir/$relative_path"
#               if [ -f "$target_file" ]; then
#                 if ! diff -q "$file" "$target_file" > /dev/null 2>&1; then
#                   echo "Updating $target_file"
#                   cp "$file" "$target_file"
#                 else
#                   echo "No changes in $target_file"
#                 fi
#               else
#                 echo "New file detected, copying $file to target repo"
#                 mkdir -p "$(dirname "$target_file")"
#                 cp "$file" "$target_file"
#               fi
#             done
#           }
#           # Sync files from source_repo/bundle to target_repo/bundle
#           sync_files "source_repo/bundle" "target_repo/bundle"
          
#           # Sync Dockerfile
#           if ! diff -q source_repo/Dockerfiles/bundle.Dockerfile target_repo/bundle/Dockerfile > /dev/null 2>&1; then
#             echo "Updating Dockerfile"
#             cp source_repo/Dockerfiles/bundle.Dockerfile target_repo/bundle/Dockerfile
#           else
#             echo "No changes in Dockerfile"
#           fi

#       - name: Commit and Push Changes to Target Repo
#         run: |
#           cd target_repo
#           git config user.name "GitHub Actions"
#           git config user.email "actions@github.com"
#           git add .
#           git commit -m "Sync changes from source repo" || echo "No changes to commit"
#           git push origin ${{ github.ref_name }}  # Push to the same branch in the target repo

Loading history...


Rashmi Panchamukhi
  12:09 PM
name: Sync Bundle from Operator Repo to RBC Repo

on:
  push:
    branches:
      - 'rhoai-*'  # Trigger the workflow on pushes to any rhoai-* branch
    paths:
      - 'bundle/**'  # Trigger the workflow for changes to any file in the bundle directory
      - 'Dockerfiles/bundle.Dockerfile'  # Trigger the workflow for changes to the Dockerfile

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source repo
        uses: actions/checkout@v3
        with:
          repository: DevOps-automation-ttasks/rhods-operator.git
          token: ${{ secrets.PAT_TOKEN }}
          path: source_repo
          ref: ${{ github.ref_name }}  # Use the same branch name as in the event

      - name: Checkout target repo
        uses: actions/checkout@v3
        with:
          repository: DevOps-automation-tasks/RHOAI-Build-Config.git
          token: ${{ secrets.PAT_TOKEN }}
          path: target_repo
          ref: ${{ github.ref_name }}  # Use the same branch name as in the event

      - name: Remove unnecessary fields from CSV
        run: |
          sed -i '/olm.skipRange/d' source_repo/bundle/manifests/*.clusterserviceversion.yaml
          sed -i '/replaces/d' source_repo/bundle/manifests/*.clusterserviceversion.yaml

      - name: Remove channels and defaultChannel from annotations.yaml
        run: |
          # Remove the entire line containing "operators.operatorframework.io.bundle.channels.v1"
          sed -i '/operators.operatorframework.io.bundle.channels.v1:/d' source_repo/bundle/metadata/annotations.yaml
    
          # Remove the entire line containing "operators.operatorframework.io.bundle.channel.default.v1:"
          sed -i '/operators.operatorframework.io.bundle.channel.default.v1:/d' source_repo/bundle/metadata/annotations.yaml

      - name: Backup image and relatedImage fields from target repo
        run: |
          # Backup the target repo image and RELATED_IMAGE fields
          cp target_repo/bundle/manifests/*.clusterserviceversion.yaml /tmp/target_csv.yaml
          grep -E 'image:|RELATED_IMAGE_' /tmp/target_csv.yaml > /tmp/backup_images_relatedImages.txt

      - name: Sync files from source to target repo excluding image and RELATED_IMAGE fields
        run: |
          # Copy the source files to the target repo
          rsync -av --exclude="*.clusterserviceversion.yaml" source_repo/bundle/ target_repo/bundle/
          
          # Merge the target image and RELATED_IMAGE fields back into the synced target CSV
          while read -r line; do
            key=$(echo "$line" | cut -d: -f1)
            value=$(echo "$line" | cut -d: -f2-)
            sed -i "s|$key:.*|$key:$value|g" target_repo/bundle/manifests/*.clusterserviceversion.yaml
          done < /tmp/backup_images_relatedImages.txt

      - name: Sync Dockerfile
        run: |
          if ! diff -q source_repo/Dockerfiles/bundle.Dockerfile target_repo/bundle/Dockerfile > /dev/null 2>&1; then
            echo "Updating Dockerfile"
            cp source_repo/Dockerfiles/bundle.Dockerfile target_repo/bundle/Dockerfile
          else
            echo "No changes in Dockerfile"
          fi

      - name: Commit and Push Changes to Target Repo
        run: |
          cd target_repo
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .
          git commit -m "Sync changes from source repo" || echo "No changes to commit"
          git push origin ${{ github.ref_name }}  # Push to the same branch in the target repo


Mohammadi Iram
  12:20 PM
containerImage: "registry.redhat.io/rhoai/odh-rhel8-operator@sha256:162d26b2543d2aabae1f231f1febabbaa0ebb92851056b67826a1649b871fbc6"


Mohammadi Iram
  12:27 PM
relatedImages:
12:30
RELATED_IMAGE
12:30
relatedImages:


Rashmi Panchamukhi
  12:32 PM
name: Sync Bundle from Operator Repo to RBC Repo

on:
  push:
    branches:
      - 'rhoai-*'  # Trigger the workflow on pushes to any rhoai-* branch
    paths:
      - 'bundle/**'  # Trigger the workflow for changes to any file in the bundle directory
      - 'Dockerfiles/bundle.Dockerfile'  # Trigger the workflow for changes to the Dockerfile

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source repo
        uses: actions/checkout@v3
        with:
          repository: DevOps-automation-tasks/rhods-operator.git
          token: ${{ secrets.PAT_TOKEN }}
          path: source_repo
          ref: ${{ github.ref_name }}  # Use the same branch name as in the event

      - name: Checkout target repo
        uses: actions/checkout@v3
        with:
          repository: DevOps-automation-tasks/RHOAI-Build-Config.git
          token: ${{ secrets.PAT_TOKEN }}
          path: target_repo
          ref: ${{ github.ref_name }}  # Use the same branch name as in the event

      - name: Remove unnecessary fields from CSV
        run: |
          sed -i '/olm.skipRange/d' source_repo/bundle/manifests/*.clusterserviceversion.yaml
          sed -i '/replaces/d' source_repo/bundle/manifests/*.clusterserviceversion.yaml

      - name: Remove channels and defaultChannel from annotations.yaml
        run: |
          # Remove the entire line containing "operators.operatorframework.io.bundle.channels.v1"
          sed -i '/operators.operatorframework.io.bundle.channels.v1:/d' source_repo/bundle/metadata/annotations.yaml
    
          # Remove the entire line containing "operators.operatorframework.io.bundle.channel.default.v1"
          sed -i '/operators.operatorframework.io.bundle.channel.default.v1:/d' source_repo/bundle/metadata/annotations.yaml

      - name: Backup image, RELATED_IMAGE, and relatedImages fields from target repo
        run: |
          # Backup the target repo image, RELATED_IMAGE, and relatedImages fields
          cp target_repo/bundle/manifests/*.clusterserviceversion.yaml /tmp/target_csv.yaml
          
          # Backup both RELATED_IMAGE and relatedImages fields
          grep -E 'image:|RELATED_IMAGE_|relatedImages:' /tmp/target_csv.yaml > /tmp/backup_images_relatedImages.txt

      - name: Sync files from source to target repo excluding image, RELATED_IMAGE, and relatedImages fields
        run: |
          # Copy the source files to the target repo
          rsync -av --exclude="*.clusterserviceversion.yaml" source_repo/bundle/ target_repo/bundle/
          
          # Merge the target image, RELATED_IMAGE, and relatedImages fields back into the synced target CSV
          while read -r line; do
            key=$(echo "$line" | cut -d: -f1)
            value=$(echo "$line" | cut -d: -f2-)
            sed -i "s|$key:.*|$key:$value|g" target_repo/bundle/manifests/*.clusterserviceversion.yaml
          done < /tmp/backup_images_relatedImages.txt

      - name: Sync Dockerfile
        run: |
          if ! diff -q source_repo/Dockerfiles/bundle.Dockerfile target_repo/bundle/Dockerfile > /dev/null 2>&1; then
            echo "Updating Dockerfile"
            cp source_repo/Dockerfiles/bundle.Dockerfile target_repo/bundle/Dockerfile
          else
            echo "No changes in Dockerfile"
          fi

      - name: Commit and Push Changes to Target Repo
        run: |
          cd target_repo
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .
          git commit -m "Sync changes from source repo" || echo "No changes to commit"
          git push origin ${{ github.ref_name }}  # Push to the same branch in the target repo


Rashmi Panchamukhi
  12:38 PM
name: Sync Bundle from Operator Repo to RBC Repo

on:
  push:
    branches:
      - 'rhoai-*'  # Trigger the workflow on pushes to any rhoai-* branch
    paths:
      - 'bundle/**'  # Trigger the workflow for changes to any file in the bundle directory
      - 'Dockerfiles/bundle.Dockerfile'  # Trigger the workflow for changes to the Dockerfile

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source repo
        uses: actions/checkout@v3
        with:
          repository: DevOps-automation-tasks/rhods-operator.git
          token: ${{ secrets.PAT_TOKEN }}
          path: source_repo
          ref: ${{ github.ref_name }}  # Use the same branch name as in the event

      - name: Checkout target repo
        uses: actions/checkout@v3
        with:
          repository: DevOps-automation-tasks/RHOAI-Build-Config.git
          token: ${{ secrets.PAT_TOKEN }}
          path: target_repo
          ref: ${{ github.ref_name }}  # Use the same branch name as in the event

      - name: Remove unnecessary fields from CSV
        run: |
          sed -i '/olm.skipRange/d' source_repo/bundle/manifests/*.clusterserviceversion.yaml
          sed -i '/replaces/d' source_repo/bundle/manifests/*.clusterserviceversion.yaml

      - name: Remove channels and defaultChannel from annotations.yaml
        run: |
          # Remove the entire line containing "operators.operatorframework.io.bundle.channels.v1"
          sed -i '/operators.operatorframework.io.bundle.channels.v1:/d' source_repo/bundle/metadata/annotations.yaml
    
          # Remove the entire line containing "operators.operatorframework.io.bundle.channel.default.v1:"
          sed -i '/operators.operatorframework.io.bundle.channel.default.v1:/d' source_repo/bundle/metadata/annotations.yaml

      - name: Backup image, RELATED_IMAGE, and relatedImages fields from target repo
        run: |
          # Backup the target repo image and RELATED_IMAGE fields
          cp target_repo/bundle/manifests/*.clusterserviceversion.yaml /tmp/target_csv.yaml
          
          # Backup RELATED_IMAGE and the entire relatedImages section
          grep -E 'image:|RELATED_IMAGE_' /tmp/target_csv.yaml > /tmp/backup_images.txt
          # Backup the entire relatedImages section (multi-line)
          awk '/relatedImages:/,/]/' /tmp/target_csv.yaml > /tmp/backup_relatedImages.txt

      - name: Sync files from source to target repo excluding image, RELATED_IMAGE, and relatedImages fields
        run: |
          # Copy the source files to the target repo
          rsync -av --exclude="*.clusterserviceversion.yaml" source_repo/bundle/ target_repo/bundle/
          
          # Restore the original image and RELATED_IMAGE fields
          while read -r line; do
            key=$(echo "$line" | cut -d: -f1)
            value=$(echo "$line" | cut -d: -f2-)
            sed -i "s|$key:.*|$key:$value|g" target_repo/bundle/manifests/*.clusterserviceversion.yaml
          done < /tmp/backup_images.txt
          
          # Restore the relatedImages section
          if grep -q 'relatedImages:' target_repo/bundle/manifests/*.clusterserviceversion.yaml; then
            # Remove the existing relatedImages section from the target repo CSV
            sed -i '/relatedImages:/,/\]/d' target_repo/bundle/manifests/*.clusterserviceversion.yaml
            # Add the original relatedImages section from the backup
            sed -i '/^spec:/r /tmp/backup_relatedImages.txt' target_repo/bundle/manifests/*.clusterserviceversion.yaml
          fi

      - name: Sync Dockerfile
        run: |
          if ! diff -q source_repo/Dockerfiles/bundle.Dockerfile target_repo/bundle/Dockerfile > /dev/null 2>&1; then
            echo "Updating Dockerfile"
            cp source_repo/Dockerfiles/bundle.Dockerfile target_repo/bundle/Dockerfile
          else
            echo "No changes in Dockerfile"
          fi

      - name: Commit and Push Changes to Target Repo
        run: |
          cd target_repo
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .
          git commit -m "Sync changes from source repo" || echo "No changes to commit"
          git push origin ${{ github.ref_name }}  # Push to the same branch in the target repo


Rashmi Panchamukhi
  12:43 PM
name: Sync Bundle from Operator Repo to RBC Repo
on:
  push:
    branches:
      - 'rhoai-*'  # Trigger the workflow on pushes to any rhoai-* branch
    paths:
      - 'bundle/**'  # Trigger the workflow for changes to any file in the bundle directory
      - 'Dockerfiles/bundle.Dockerfile'  # Trigger the workflow for changes to the Dockerfile
permissions:
  contents: read
  packages: write
  id-token: write
jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source repo
        uses: actions/checkout@v3
        with:
          repository: DevOps-automation-tasks/rhods-operator.git
          token: ${{ secrets.PAT_TOKEN }}
          path: source_repo
          ref: ${{ github.ref_name }}  # Use the same branch name as in the event
      - name: Checkout target repo
        uses: actions/checkout@v3
        with:
          repository: DevOps-automation-tasks/RHOAI-Build-Config.git
          token: ${{ secrets.PAT_TOKEN }}
          path: target_repo
          ref: ${{ github.ref_name }}  # Use the same branch name as in the event
      - name: Remove unnecessary fields from CSV
        run: |
          sed -i '/olm.skipRange/d' source_repo/bundle/manifests/*.clusterserviceversion.yaml
          sed -i '/replaces/d' source_repo/bundle/manifests/*.clusterserviceversion.yaml
      - name: Remove channels and defaultChannel from annotations.yaml
        run: |
          # Remove the entire line containing "operators.operatorframework.io.bundle.channels.v1"
          sed -i '/operators.operatorframework.io.bundle.channels.v1:/d' source_repo/bundle/metadata/annotations.yaml
          # Remove the entire line containing "operators.operatorframework.io.bundle.channel.default.v1:"
          sed -i '/operators.operatorframework.io.bundle.channel.default.v1:/d' source_repo/bundle/metadata/annotations.yaml
      - name: Backup relatedImages and RELATED_IMAGE fields from target repo
        run: |
          # Backup the target repo relatedImages and RELATED_IMAGE fields
          cp target_repo/bundle/manifests/*.clusterserviceversion.yaml /tmp/target_csv.yaml
          # Backup RELATED_IMAGE fields
          grep -E 'RELATED_IMAGE_' /tmp/target_csv.yaml > /tmp/backup_related_image.txt
          # Backup relatedImages section (multi-line)
          awk '/relatedImages:/,/]/' /tmp/target_csv.yaml > /tmp/backup_relatedImages.txt
      - name: Sync files from source to target repo excluding relatedImages and RELATED_IMAGE fields
        run: |
          # Copy the source files to the target repo
          rsync -av --exclude="*.clusterserviceversion.yaml" source_repo/bundle/ target_repo/bundle/
          # Copy the source .clusterserviceversion.yaml file, but exclude relatedImages and RELATED_IMAGE fields
          rsync -av source_repo/bundle/manifests/*.clusterserviceversion.yaml target_repo/bundle/manifests/
          # Remove existing relatedImages and RELATED_IMAGE fields from the synced target CSV
          sed -i '/RELATED_IMAGE_/d' target_repo/bundle/manifests/*.clusterserviceversion.yaml
          sed -i '/relatedImages:/,/\]/d' target_repo/bundle/manifests/*.clusterserviceversion.yaml
          # Restore the RELATED_IMAGE fields
          while read -r line; do
            key=$(echo "$line" | cut -d: -f1)
            value=$(echo "$line" | cut -d: -f2-)
            sed -i "/spec:/a $key:$value" target_repo/bundle/manifests/*.clusterserviceversion.yaml
          done < /tmp/backup_related_image.txt
          # Restore the relatedImages section
          sed -i '/^spec:/r /tmp/backup_relatedImages.txt' target_repo/bundle/manifests/*.clusterserviceversion.yaml
      - name: Sync Dockerfile
        run: |
          if ! diff -q source_repo/Dockerfiles/bundle.Dockerfile target_repo/bundle/Dockerfile > /dev/null 2>&1; then
            echo "Updating Dockerfile"
            cp source_repo/Dockerfiles/bundle.Dockerfile target_repo/bundle/Dockerfile
          else
            echo "No changes in Dockerfile"
          fi
      - name: Commit and Push Changes to Target Repo
        run: |
          cd target_repo
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .
          git commit -m "Sync changes from source repo" || echo "No changes to commit"
          git push origin ${{ github.ref_name }}  # Push to the same branch in the target repo


Mohammadi Iram
  12:46 PM
Run # Backup the target repo relatedImages and RELATED_IMAGE fields
2
  # Backup the target repo relatedImages and RELATED_IMAGE fields
3
  cp target_repo/bundle/manifests/*.clusterserviceversion.yaml /tmp/target_csv.yaml
4
  # Backup RELATED_IMAGE fields
5
  grep -E 'RELATED_IMAGE_' /tmp/target_csv.yaml > /tmp/backup_related_image.txt
6
  # Backup relatedImages section (multi-line)
7
  awk '/relatedImages:/,/]/' /tmp/target_csv.yaml > /tmp/backup_relatedImages.txt
8
  shell: /usr/bin/bash -e {0}
9
Error: Process completed with exit code 1.


Rashmi Panchamukhi
  12:48 PM
name: Sync Bundle from Operator Repo to RBC Repo

on:
  push:
    branches:
      - 'rhoai-*'  # Trigger the workflow on pushes to any rhoai-* branch
    paths:
      - 'bundle/**'  # Trigger the workflow for changes to any file in the bundle directory
      - 'Dockerfiles/bundle.Dockerfile'  # Trigger the workflow for changes to the Dockerfile

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source repo
        uses: actions/checkout@v3
        with:
          repository: DevOps-automation-tasks/rhods-operator.git
          token: ${{ secrets.PAT_TOKEN }}
          path: source_repo
          ref: ${{ github.ref_name }}  # Use the same branch name as in the event

      - name: Checkout target repo
        uses: actions/checkout@v3
        with:
          repository: DevOps-automation-tasks/RHOAI-Build-Config.git
          token: ${{ secrets.PAT_TOKEN }}
          path: target_repo
          ref: ${{ github.ref_name }}  # Use the same branch name as in the event

      - name: Check for existing .clusterserviceversion.yaml in target repo
        run: |
          if [ -z "$(ls -A target_repo/bundle/manifests/*.clusterserviceversion.yaml 2>/dev/null)" ]; then
            echo "No .clusterserviceversion.yaml file found in target_repo/bundle/manifests/"
            exit 1
          fi

      - name: Remove unnecessary fields from CSV
        run: |
          sed -i '/olm.skipRange/d' source_repo/bundle/manifests/*.clusterserviceversion.yaml
          sed -i '/replaces/d' source_repo/bundle/manifests/*.clusterserviceversion.yaml

      - name: Remove channels and defaultChannel from annotations.yaml
        run: |
          sed -i '/operators.operatorframework.io.bundle.channels.v1:/d' source_repo/bundle/metadata/annotations.yaml
          sed -i '/operators.operatorframework.io.bundle.channel.default.v1:/d' source_repo/bundle/metadata/annotations.yaml

      - name: Backup relatedImages and RELATED_IMAGE fields from target repo
        run: |
          # Backup the target repo relatedImages and RELATED_IMAGE fields
          cp target_repo/bundle/manifests/*.clusterserviceversion.yaml /tmp/target_csv.yaml
          
          # Backup RELATED_IMAGE fields
          grep -E 'RELATED_IMAGE_' /tmp/target_csv.yaml > /tmp/backup_related_image.txt
          
          # Backup relatedImages section (multi-line)
          awk '/relatedImages:/,/]/' /tmp/target_csv.yaml > /tmp/backup_relatedImages.txt

      - name: Sync files from source to target repo excluding relatedImages and RELATED_IMAGE fields
        run: |
          # Sync everything except the fields we want to preserve
          cp -r source_repo/bundle/* target_repo/bundle/
          
          # Restore the RELATED_IMAGE fields
          while read -r line; do
            key=$(echo "$line" | cut -d: -f1)
            value=$(echo "$line" | cut -d: -f2-)
            sed -i "/spec:/a $key:$value" target_repo/bundle/manifests/*.clusterserviceversion.yaml
          done < /tmp/backup_related_image.txt
          
          # Restore the relatedImages section
          sed -i '/^spec:/r /tmp/backup_relatedImages.txt' target_repo/bundle/manifests/*.clusterserviceversion.yaml

      - name: Sync Dockerfile
        run: |
          if ! diff -q source_repo/Dockerfiles/bundle.Dockerfile target_repo/bundle/Dockerfile > /dev/null 2>&1; then
            echo "Updating Dockerfile"
            cp source_repo/Dockerfiles/bundle.Dockerfile target_repo/bundle/Dockerfile
          else
            echo "No changes in Dockerfile"
          fi

      - name: Commit and Push Changes to Target Repo
        run: |
          cd target_repo
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .
          git commit -m "Sync changes from source repo" || echo "No changes to commit"
          git push origin ${{ github.ref_name }}
12:52
name: Sync Bundle from Operator Repo to RBC Repo

on:
  push:
    branches:
      - 'rhoai-*'  # Trigger the workflow on pushes to any rhoai-* branch
    paths:
      - 'bundle/**'  # Trigger the workflow for changes to any file in the bundle directory
      - 'Dockerfiles/bundle.Dockerfile'  # Trigger the workflow for changes to the Dockerfile

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source repo
        uses: actions/checkout@v3
        with:
          repository: DevOps-automation-tasks/rhods-operator.git
          token: ${{ secrets.PAT_TOKEN }}
          path: source_repo
          ref: ${{ github.ref_name }}  # Use the same branch name as in the event

      - name: Checkout target repo
        uses: actions/checkout@v3
        with:
          repository: DevOps-automation-tasks/RHOAI-Build-Config.git
          token: ${{ secrets.PAT_TOKEN }}
          path: target_repo
          ref: ${{ github.ref_name }}  # Use the same branch name as in the event

      - name: Verify target .clusterserviceversion.yaml exists
        run: |
          if [ -z "$(ls target_repo/bundle/manifests/*.clusterserviceversion.yaml 2>/dev/null)" ]; then
            echo "No .clusterserviceversion.yaml file found in target_repo/bundle/manifests/"
            exit 1
          fi

      - name: Remove unnecessary fields from CSV
        run: |
          sed -i '/olm.skipRange/d' source_repo/bundle/manifests/*.clusterserviceversion.yaml
          sed -i '/replaces/d' source_repo/bundle/manifests/*.clusterserviceversion.yaml

      - name: Remove channels and defaultChannel from annotations.yaml
        run: |
          sed -i '/operators.operatorframework.io.bundle.channels.v1:/d' source_repo/bundle/metadata/annotations.yaml
          sed -i '/operators.operatorframework.io.bundle.channel.default.v1:/d' source_repo/bundle/metadata/annotations.yaml

      - name: Backup relatedImages and RELATED_IMAGE fields from target repo
        run: |
          # Create a temporary file for backup
          cp target_repo/bundle/manifests/*.clusterserviceversion.yaml /tmp/target_csv.yaml

          # Backup RELATED_IMAGE fields
          grep -E 'RELATED_IMAGE_' /tmp/target_csv.yaml > /tmp/backup_related_image.txt

          # Backup relatedImages section (multi-line)
          awk '/relatedImages:/,/]/' /tmp/target_csv.yaml > /tmp/backup_relatedImages.txt

      - name: Sync files from source to target repo excluding relatedImages and RELATED_IMAGE fields
        run: |
          # Sync everything from source repo to target repo
          cp -r source_repo/bundle/* target_repo/bundle/

          # Remove existing RELATED_IMAGE fields and relatedImages section from the target CSV
          sed -i '/RELATED_IMAGE_/d' target_repo/bundle/manifests/*.clusterserviceversion.yaml
          sed -i '/relatedImages:/,/]/d' target_repo/bundle/manifests/*.clusterserviceversion.yaml

          # Restore the RELATED_IMAGE fields
          while read -r line; do
            key=$(echo "$line" | cut -d: -f1)
            value=$(echo "$line" | cut -d: -f2-)
            sed -i "/spec:/a $key:$value" target_repo/bundle/manifests/*.clusterserviceversion.yaml
          done < /tmp/backup_related_image.txt

          # Restore the relatedImages section
          sed -i '/spec:/r /tmp/backup_relatedImages.txt' target_repo/bundle/manifests/*.clusterserviceversion.yaml

      - name: Sync Dockerfile
        run: |
          if ! diff -q source_repo/Dockerfiles/bundle.Dockerfile target_repo/bundle/Dockerfile > /dev/null 2>&1; then
            echo "Updating Dockerfile"
            cp source_repo/Dockerfiles/bundle.Dockerfile target_repo/bundle/Dockerfile
          else
            echo "No changes in Dockerfile"
          fi

      - name: Commit and Push Changes to Target Repo
        run: |
          cd target_repo
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .
          git commit -m "Sync changes from source repo" || echo "No changes to commit"
          git push origin ${{ github.ref_name }}
New
12:52
1
name: Sync Bundle from Operator Repo to RBC Repo

on:
  push:
    branches:
      - 'rhoai-*'  # Trigger the workflow on pushes to any rhoai-* branch
    paths:
      - 'bundle/**'  # Trigger the workflow for changes to any file in the bundle directory
      - 'Dockerfiles/bundle.Dockerfile'  # Trigger the workflow for changes to the Dockerfile

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source repo
        uses: actions/checkout@v3
        with:
          repository: DevOps-automation-tasks/rhods-operator.git
          token: ${{ secrets.PAT_TOKEN }}
          path: source_repo
          ref: ${{ github.ref_name }}  # Use the same branch name as in the event

      - name: Checkout target repo
        uses: actions/checkout@v3
        with:
          repository: DevOps-automation-tasks/RHOAI-Build-Config.git
          token: ${{ secrets.PAT_TOKEN }}
          path: target_repo
          ref: ${{ github.ref_name }}  # Use the same branch name as in the event

      - name: Verify target .clusterserviceversion.yaml exists
        run: |
          if [ -z "$(ls target_repo/bundle/manifests/*.clusterserviceversion.yaml 2>/dev/null)" ]; then
            echo "No .clusterserviceversion.yaml file found in target_repo/bundle/manifests/"
            exit 1
          fi

      - name: Remove unnecessary fields from CSV
        run: |
          sed -i '/olm.skipRange/d' source_repo/bundle/manifests/*.clusterserviceversion.yaml
          sed -i '/replaces/d' source_repo/bundle/manifests/*.clusterserviceversion.yaml

      - name: Remove channels and defaultChannel from annotations.yaml
        run: |
          sed -i '/operators.operatorframework.io.bundle.channels.v1:/d' source_repo/bundle/metadata/annotations.yaml
          sed -i '/operators.operatorframework.io.bundle.channel.default.v1:/d' source_repo/bundle/metadata/annotations.yaml

      - name: Backup relatedImages and RELATED_IMAGE fields from target repo
        run: |
          # Create a temporary file for backup
          cp target_repo/bundle/manifests/*.clusterserviceversion.yaml /tmp/target_csv.yaml

          # Backup RELATED_IMAGE fields
          grep -E 'RELATED_IMAGE_' /tmp/target_csv.yaml > /tmp/backup_related_image.txt || echo "No RELATED_IMAGE fields found."

          # Backup relatedImages section (multi-line)
          awk '/relatedImages:/,/]/' /tmp/target_csv.yaml > /tmp/backup_relatedImages.txt || echo "No relatedImages section found."

      - name: Sync files from source to target repo excluding relatedImages and RELATED_IMAGE fields
        run: |
          # Sync everything from source repo to target repo
          cp -r source_repo/bundle/* target_repo/bundle/

          # Remove existing RELATED_IMAGE fields and relatedImages section from the target CSV
          sed -i '/RELATED_IMAGE_/d' target_repo/bundle/manifests/*.clusterserviceversion.yaml
          sed -i '/relatedImages:/,/]/d' target_repo/bundle/manifests/*.clusterserviceversion.yaml

          # Restore the RELATED_IMAGE fields
          while read -r line; do
            key=$(echo "$line" | cut -d: -f1)
            value=$(echo "$line" | cut -d: -f2-)
            sed -i "/spec:/a $key:$value" target_repo/bundle/manifests/*.clusterserviceversion.yaml
          done < /tmp/backup_related_image.txt

          # Restore the relatedImages section
          if [[ -s /tmp/backup_relatedImages.txt ]]; then
            sed -i '/^spec:/r /tmp/backup_relatedImages.txt' target_repo/bundle/manifests/*.clusterserviceversion.yaml
          fi

      - name: Sync Dockerfile
        run: |
          if ! diff -q source_repo/Dockerfiles/bundle.Dockerfile target_repo/bundle/Dockerfile > /dev/null 2>&1; then
            echo "Updating Dockerfile"
            cp source_repo/Dockerfiles/bundle.Dockerfile target_repo/bundle/Dockerfile
          else
            echo "No changes in Dockerfile"
          fi

      - name: Commit and Push Changes to Target Repo
        run: |
          cd target_repo
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .
          git commit -m "Sync changes from source repo" || echo "No changes to commit"
          git push origin ${{ github.ref_name }}


